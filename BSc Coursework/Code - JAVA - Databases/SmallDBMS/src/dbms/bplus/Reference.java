package dbms.bplus;

import java.io.Serializable;

/**
 * Implements a reference to an element inside a page of a B+ Tree.
 */

public class Reference implements Serializable {
	/**
	 * The autogenerated serialVersionUID
	 */
	private static final long serialVersionUID = -2078638888164502876L;

	/**
	 * Defines a reference to be dead.
	 */
	private boolean dead;

	/**
	 * The key of the reference.
	 */
	private int key;

	/**
	 * The page number of the reference.
	 */
	private int pageNumber;

	/**
	 * The offset of the reference.
	 */
	private int offset;

	/**
	 * Creates the values given as parameters to the fields of the reference
	 * instance.
	 * 
	 * @param key
	 *            The key of the reference.
	 * @param pageNumber
	 *            The page number of the reference.
	 * @param offset
	 *            The offset of the reference.
	 */
	public Reference(final int key, final int pageNumber, final int offset) {
		this.dead = false;
		this.key = key;
		this.pageNumber = pageNumber;
		this.offset = offset;
	} // end method Reference

	/**
	 * Empty constructor. Assigns default values to the fields of the reference
	 * instance. It is used to create dead references.
	 */
	public Reference() {
		// Για δημιουργία μιας <<νεκρής>> αναφοράς.
		this.dead = true;
		this.key = -1;
		this.pageNumber = -1;
		this.offset = -1;
	} // end method Reference

	/**
	 * "Kills" a reference by changing the value of the <code>dead</code>
	 * field to <code>true</code>.
	 */
	public void killReference() {
		this.dead = true;
	} // end method killReference

	/**
	 * Checks if a value is dead or not.
	 * 
	 * @return <code>true </code> if the value is "dead" and <code>false</code>
	 *         otherwise.
	 */
	public boolean isDead() {
		return this.dead;
	} // end method isDead

	/**
	 * Retrieves the page number of the reference.
	 * 
	 * @return The integer <code>pageNumber</code>.
	 */
	public int getPageNumber() {
		return this.pageNumber;
	} // end method getPageNumber

	/**
	 * Retrieves the page number of the reference.
	 * 
	 * @return The integer <code>key </code>.
	 */
	public int getKey() {
		return this.key;
	} // end method getKey

	/**
	 * Changes the page and offset values of the <code>pageNumber</code> and
	 * <code>offset</code> fields respectively.
	 * 
	 * @param page
	 *            The new page number.
	 * @param offset
	 *            The new offset.
	 */
	public void changePageAndOffset(final int page, final int offset) {
		this.pageNumber = page;
		this.offset = offset;
	} // end method changePageAndOffset

	/**
	 * Retrieves the offset of the reference.
	 * 
	 * @return The <code>offset</code>.
	 */
	public int getOffset() {
		return this.offset;
	} // end method getOffset

	/**
	 * Assigns the value, taken from the parameter, to the <code>offset</code>
	 * field.
	 * 
	 * @param offset
	 *            The new offset.
	 */
	public void setOffset(final int offset) {
		this.offset = offset;
	} // end method setOffset

	/**
	 * Creates a clone of the reference.
	 * @return The clone.
	 */
	@Override
	protected Reference clone() {
		Reference clone = new Reference(this.key, this.pageNumber, this.offset);

		if (this.dead)
			clone.killReference();
		return clone;
	} // end method clone
} // end class Reference
